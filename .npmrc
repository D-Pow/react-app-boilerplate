###  npm configurations  ###
# Configs can be passed via CLI or set here
# Docs: https://docs.npmjs.com/cli/v7/using-npm/config


# Allow publishing to/installing from a private npm registry.
# Note that the private package must be scoped and that the original
# npm registry must be added so public packages are still installed from
# the original registry.
#
# If using Yarn v1, add this to your `.yarnrc` file: registry "https://registry.yarnpkg.com"
# and it will automatically pick up the details from both `.npmrc` and `.yarnrc`
#
# @d-pow:registry=https://npm.pkg.github.com/
# registry=https://registry.npmjs.org/


# Always colorize stdout
color=always


# Don't allow `npm install` unless the NodeJS version complies
# with the `engines` field in package.json
# npm only blocks `install`, while yarn will block all scripts
engine-strict=true


# npm v7 made `(pre|post)?install` scripts in dependencies silent
# by default. This undoes that.
# See:
#   https://github.com/npm/cli/issues/1905#issuecomment-865356457
#   https://github.com/npm/cli/issues/1905#issuecomment-875999674
foreground-scripts=true


# Allows passing in options to the `node` command when
# running `npm`. This allows you to avoid having to
# use `node --option node_modules/.bin/executable`.
# Options only include those that are valid `NODE_OPTIONS`.
# See: https://nodejs.org/api/cli.html#cli_node_options_options
#
# Allow top-level `await` calls so that webpack.config.mjs can await CJS imports.
# Allow JSON files to be imported in .mjs files.
# Allow automatic extension resolution as well as importing index.js from directories like source code can (e.g. `import file from './file'` instead of './file.js', and `import Utils from './utils'` instead of './utils/index.js').
# Allow the use of `import.meta.resolve` to use file paths to generate import-safe URLs (different from browser-safe URLs).
node-options='--experimental-top-level-await --experimental-json-modules --experimental-specifier-resolution=node --experimental-import-meta-resolve'


# For some reason, `npm run` doesn't use the default shell,
# nor the one from the `$SHELL` env var.
# It also doesn't allow `/usr/bin/env bash`, `process.env.SHELL`,
# or `$0`, so it has to be set manually here.
#script-shell=


# Format stdout with JSON rather than normal text.
# Useful for analyzing errors and such when necessary.
# Added just for transparency
#json=true
