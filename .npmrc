###  npm configurations  ###
# Configs can be passed via CLI or set here
# Docs: https://docs.npmjs.com/cli/v7/using-npm/config

# Always colorize stdout
color=always

# Don't allow `npm install` unless the node version complies
# with package.json --> engines
# npm only blocks `install`, while yarn will block all scripts
engine-strict=true

# npm v7 made `(pre|post)?install` scripts in dependencies silent
# by default. This undoes that.
# See:
#   https://github.com/npm/cli/issues/1905#issuecomment-865356457
#   https://github.com/npm/cli/issues/1905#issuecomment-875999674
foreground-scripts=true

# Format stdout with JSON rather than normal text.
# Useful for analyzing errors and such when necessary.
# Added just for transparency
#json=true

# Allows passing in options to the `node` command when
# running `npm`. This allows you to avoid having to
# use `node --option node_modules/.bin/executable`.
# Options only include those that are valid `NODE_OPTIONS`.
# See: https://nodejs.org/api/cli.html#cli_node_options_options
#
# Allow top-level `await` calls so that webpack.config.mjs can await CJS imports.
node-options='--experimental-top-level-await'

# For some reason, `npm run` doesn't use the default shell,
# nor the one from the `$SHELL` env var.
# It also doesn't allow `/usr/bin/env bash`, `process.env.SHELL`,
# or `$0`, so it has to be set manually here.
#script-shell=
