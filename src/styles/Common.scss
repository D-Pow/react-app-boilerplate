$primary: rgb(56, 0, 255);
$secondary: rgb(40, 0, 176);
$tertiary: rgb(25, 0, 97);
$light: rgb(225, 224, 224);
$lighter: rgb(237, 236, 236);
$lightest: rgb(241, 240, 240);
$dark: rgb(40, 40, 40);
$grey: rgb(232, 232, 232);
$danger: rgb(220, 53, 69);
$info: rgb(23, 162, 184);

$theme-colors: (
    "primary": $primary,
    "secondary": $secondary,
    "tertiary": $tertiary,
    "light": $light,
    "lighter": $lighter,
    "lightest": $lightest,
    "dark": $dark,
    "grey": $grey
);

$body-bg: $lightest;

// Copy Bootstrap's grid breakpoints and max-widths here in order
// to add an extra .container `xxl` breakpoint for very large monitors
$grid-breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1550px
);
$container-max-widths: (
    sm: 540px,
    md: 720px,
    lg: 960px,
    xl: 1140px,
    xxl: 1440px
);

.text-center {
  text-align: center;
}

.nav-link {
  color: $light;
  transition: color 0.5s;
}

.nav-link:hover {
  color: $danger;
}

.nav-link.active {
  color: $info;
}

@for $pix from 0 through 100 {
  .top-#{$pix} {
    top: $pix + 0%;
  }
}

.width-fit {
  width: fit-content;
}

@for $int from 0 through 200 {
  .w-#{$int} {
    width: $int + 0%;
  }
  .w-#{$int}px {
    width: $int + 0px;
  }

  .h-#{$int} {
    height: $int + 0%;
  }
  .h-#{$int}px {
    height: $int + 0px;
  }
}

.margin-clear {
  margin: 0;
}

.overflow-hidden {
  overflow: hidden;
}

.full-screen {
  height: 100vh !important;
  width: 100vw !important;
}

.full-width-minus-scrollbar {
  // 100vw includes Y-scrollbar area, 100% does not
  width: calc(100vw - (100vw - 100%)) !important;
}

.full-screen-minus-scrollbar {
  @extend .full-screen;
  @extend .full-width-minus-scrollbar;
}

.mt-10p {
  margin-top: 10%;
}

.mb-5p {
  margin-bottom: 5%;
}

.mx-5p {
  margin-left: 5%;
  margin-right: 5%;
}

.absolute-center {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  margin: auto;
  height: fit-content;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
  align-content: center;
  margin: auto;
}

.m-auto {
  margin: auto;
}

.img-fluid {
  max-width: 100%;
  height: auto;
}

.align-content-evenly {
  align-content: space-evenly !important;
}

.underline {
  text-decoration: underline;

  &-extra-space {
    @extend .underline;
    text-underline-position: under;
  }
}

.segment-bar {
  background: $primary;
  height: 5px;
}

.border.border-medium {
  border-width: 0.2rem !important;

  @each $colorName, $color in $theme-colors {
    @for $opacity from 0 through 9 {
      $opacityVal: $opacity/10;
      &.border-#{$colorName}-opacity-#{$opacity} {
        border-color: rgba($color, $opacityVal) !important;
      }
    }
  }
}

input.text-white::placeholder, textarea.text-white::placeholder {
  color: white;
}

.box-shadow-sm {
  box-shadow: 0 0 0.5em 0.5em rgba(0, 0, 0, 0.15) !important;
  border-radius: 0.25em !important;
  z-index: 100;
}

:export {
  themeColors: #{$theme-colors};
  gridBreakpoints: #{$grid-breakpoints};
}
